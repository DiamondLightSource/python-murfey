# YAML formatting specifications: https://yaml.org/spec/1.2.2/

repos:
# Syntax validation and some basic sanity checks
- repo: https://github.com/pre-commit/pre-commit-hooks
  #rev: v4.0.1
  rev: v4.5.0  # Format depends on how version tag is formatted on the repo (with 'v', without it, etc.)
  hooks:
  - id: check-merge-conflict
    name: Checking for merge conflicts
  - id: check-ast
    name: Checking AST consistency
    fail_fast: True
  - id: check-json
    name: Checking for JSON files
  - id: check-added-large-files
    name: Checking for added large files
    args: ['--maxkb=200']
  - id: check-yaml
    name: Checking for YAML files
    args: [--allow-multiple-documents]

# Automatic source code formatting
- repo: https://github.com/psf/black
  #rev: 22.3.0
  rev: 24.3.0
  hooks:
  - id: black
    name: Checking for compliance with Black formatting standards
    args: [--safe, --quiet]

# Ruff for linting and formatting
# Ruff can replace isort and flake8 (https://docs.astral.sh/ruff/linter/)
# - repo: https://github.com/astral-sh/ruff-pre-commit
#   rev: v0.3.5
#   hooks:
#   # Ruff linter
#   - id: ruff
#     name: Running Ruff linter
#     args: [--fix]
#   # Ruff formatter
#   - id: ruff-format
#     name: Running Ruff formatter
#     types_or: [python]

# # Automatically sort imports
- repo: https://github.com/PyCQA/isort
  #rev: 5.12.0
  rev: 5.13.2
  hooks:
  - id: isort
    name: Arranging imports logically via Isort
    args: [
           #'-a', 'from __future__ import annotations',        # 3.7-3.11
           '--rm', 'from __future__ import absolute_import',  # -3.0
           '--rm', 'from __future__ import division',         # -3.0
           '--rm', 'from __future__ import generator_stop',   # -3.7
           '--rm', 'from __future__ import generators',       # -2.3
           '--rm', 'from __future__ import nested_scopes',    # -2.2
           '--rm', 'from __future__ import print_function',   # -3.0
           '--rm', 'from __future__ import unicode_literals', # -3.0
           '--rm', 'from __future__ import with_statement',   # -2.6
      ]

# # Linting
- repo: https://github.com/PyCQA/flake8
  # Release history: https://flake8.pycqa.org/en/latest/release-notes/index.html
  #rev: 4.0.1
  rev: 7.0.0
  hooks:
  - id: flake8
    name: Linting according to chosen Flake8 codes
    # Added Flake8-pyproject plugin for .toml compatibility
    # flake8-comprehensions URL: https://github.com/adamchainz/flake8-comprehensions
    #additional_dependencies: ['flake8-comprehensions==3.8.0']
    
    additional_dependencies: [
      "Flake8-pyproject==1.2.3",
      'flake8-comprehensions==3.14.0'
      ]

# Type checking
- repo: https://github.com/pre-commit/mirrors-mypy
  #rev: v0.910
  rev: v1.9.0
  hooks:
  - id: mypy
    name: Checking typing using MyPy
    files: '(src|tests)/.*\.py$'  # RegEx string showing directories and files to check
    # Single quote critical due to escape character '\' used in the search string
    # (see YAML specifications - 7.3 Flow Scalar Styles)

    additional_dependencies: [
                              # Install missing stub packages
                              types-requests,
                              types-xmltodict,
                              types-PyYAML,
                              ]
