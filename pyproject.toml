[build-system]
requires = ["setuptools >= 40.6.0", "wheel"]
build-backend = "setuptools.build_meta"

# TEP 2024-04-03
[project]
name = "murfey"
authors = []
maintainers = []
description = "Client-Server architecture hauling Cryo-EM data"
readme = "README.md"
requires-python = ">=3.9"
keywords = [""]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "pydantic",
    "requests",
    "rich",
]
version = "0.11.5"
#dynamic = ["version"]  # Clashes with version variable immediately above

[project.urls]
Bug-Tracker = "https://github.com/DiamondLightSource/python-murfey/issues"
Documentation = "https://github.com/DiamondLightSource/python-murfey"
GitHub = "https://github.com/DiamondLightSource/python-murfey"


# TEP 2024-04-03
[project.optional-dependencies]
client = [
    "procrunner",
    "textual==0.42.0",
    "websocket-client",
    "werkzeug",
    "xmltodict",
]
server = [
    "mysql-connector-python<=8.0.29",
    "fastapi>=0.101",
    "cryptography",
    "importlib_resources; python_version<'3.9'",
    "ispyb",
    "jinja2",
    "packaging",
    "numpy",
    "sqlmodel",
    "pillow",
    "prometheus_client",
    "uvicorn[standard]",
    "werkzeug",
    "zocalo",
]
developer = [
    "pytest",
    "pre-commit",
    "bump2version",
]

# TEP 2024-04-03
[project.scripts]
# Where there are "." in the variable name, enclose with inverted commas
murfey = "murfey.client:run"
"murfey.server" = "murfey.server:run"
"murfey.simulate" = "murfey.cli.dummy:run"
"murfey.transfer" = "murfey.cli.transfer:run"
"murfey.db_sql" = "murfey.cli.murfey_db_sql:run"
"murfey.sessions" = "murfey.cli.db_sessions:run"
"murfey.generate_password" = "murfey.cli.generate_db_password:run" 
"murfey.generate_key" = "murfey.cli.generate_crypto_key:run"
"murfey.decrypt_password" = "murfey.cli.decrypt_db_password:run"
"murfey.create_db" = "murfey.cli.create_db:run"
"murfey.spa_inject" = "murfey.cli.inject_spa_processing:run"
"murfey.spa_ispyb_entries" = "murfey.cli.spa_ispyb_messages:run"

# TEP 2024-04-03
[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true
zip-safe = false

# TEP 2024-04-03
#[tool.setuptools.packages]
#find = {}  # This option leads to pip searching for stuff in "tests"

# TEP 2024-04-03
[tool.setuptools.packages.find]
where = ["src"]

# TEP 2024-04-03
[tool.setuptools.package-data]
"murfey.client.tui" = ["*.css"]

# TEP 2024-04-04
# Flake8-pyproject allows .toml settings to be read into Flake8
# Flake8-pyproject: https://pypi.org/project/Flake8-pyproject/
[tool.flake8]
select = [
    "C4",
    "E401",
    "E711",
    "E712",
    "E713",
    "E714",
    "E721",
    "E722",
    "E901",
    "F401",
    "F402",
    "F403",
    "F405",
    "F541",
    "F631",
    "F632",
    "F633",
    "F811",
    "F812",
    "F821",
    "F822",
    "F841",
    "F901",
    "W191",
    "W291",
    "W292",
    "W293",
    "W602",
    "W603",
    "W604",
    "W605",
    "W606",
]
ignore = [
    # "E203", 
    # "E266",
    # "E501", 
    "W503"
]
max-line-length = "88"
# Also worth investigating Ruff's compatibility with Flake8 for use with pyproject.toml
# Suggested by VSCode's auto-fill, so should be pretty popular
# Ruff: https://github.com/astral-sh/ruff

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "-ra"

[tool.mypy]
#mypy_path = "src"  # Doesn't appear to be needed, given the conditions in the pre-commit file
disable_error_code = [
    "annotation-unchecked",  # Message that the bodies of untyped functions aren't checked. Not critical
    "import-untyped"  # Error for missing library stubs. Not critical
]

[tool.ruff]
include = [
    "pyproject.toml",
    "setup.cfg",
    "setup.py",
    "src/**/*.py",
    "tests/**/*.py"
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Currently, not all Flake8 rule coes are implemented in Ruff
# A mix of the two need to be used for the rule codes currently desired
select = [
    "C4",
    "E401",
    "E711",
    "E712",
    "E713",
    "E714",
    "E721",
    "E722",
    # "E901",
    "F401",
    "F402",
    "F403",
    "F405",
    "F541",
    "F631",
    "F632",
    "F633",
    "F811",
    # "F812",
    "F821",
    "F822",
    "F841",
    "F901",
    "W191",
    "W291",
    "W292",
    "W293",
    # "W602",
    # "W603",
    # "W604",
    "W605",
    # "W606",
]
ignore = [
    "E203", 
    "E266",
    "E501", 
    # "W503"
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"
