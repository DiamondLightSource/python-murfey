# Build command template
# podman build --build-arg groupid=<groupid> --build-arg userid=<userid> --build-arg groupname=<groupname> --no-cache -f path/to/Dockerfiles/murfey-instrument-server -t murfey-instrument-server:<version> path/to/python-murfey

# Set up the Python base image to build with
FROM docker.io/library/python:3.12.8-slim-bullseye AS base

# Define external build arguments
ARG groupid
ARG groupname
ARG userid

# Add system dependencies for the developer/build environment
# Add the group and user ID to be used by Murfey
# Create virtual Python environment in which to install Murfey
# Change properties of said Python environment
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        build-essential \
        busybox \
        git \
        net-tools \
        libpq-dev && \
    busybox --install && \
    rm -rf /var/lib/apt/lists/* && \
    groupadd -r -g "${groupid}" "${groupname}" && \
    useradd -r -M "${groupname}" -u "${userid}" -g "${groupname}" && \
    python -m venv /venv && \
    chown -R "${userid}":"${groupid}" /venv && \
    chmod -R a+x /venv
ENV PATH=/venv/bin:$PATH

# Build Murfey in a different image
FROM base AS build
COPY --chown="${userid}":"${groupid}" ./ /python-murfey/
RUN python -m pip install --upgrade \
        pip \
        build \
        importlib-metadata &&\
    python -m pip install /python-murfey[client,instrument-server] && \
    chmod -R a+x /venv

# Copy installed files across to final image
FROM base
COPY --from=build --chown="${userid}":"${groupid}" /venv/ /venv/
